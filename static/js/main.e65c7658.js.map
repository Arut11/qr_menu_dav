{"version":3,"file":"static/js/main.e65c7658.js","mappings":"mBAMA,MAAMA,EAAcC,SAASC,iBAAiB,+BACxCC,EAAcF,SAASG,cAAc,+CACrCC,EAAeJ,SAASG,cAAc,8BAC5C,IAAIE,EAAa,EAOjBN,EAAYO,SAASC,IAGnB,MAAMC,EAAeD,EAAWJ,cAAc,0BACxCM,EAAYF,EAAWJ,cAAc,qDACrCO,EAAiBH,EAAWJ,cAAc,sDAC1CQ,EAAkBJ,EAAWJ,cAAc,6BAG3CS,EAAaC,WAAWL,EAAaM,UAAUC,QAAQ,UAAW,KAExE,IAAIC,EADyBC,SAASN,EAAgBG,WAItDL,EAAUS,iBAAiB,SAAS,KAClCF,IACAL,EAAgBG,UAAYE,EAC5BN,EAAeS,MAAMC,QAAU,eAC/BT,EAAgBQ,MAAMC,QAAU,eAE5Bf,GAAcO,EAClBV,EAAYmB,UAAS,oCAAAC,OAAcjB,EAAWkB,eAAe,SAAQ,wBACrEnB,EAAaiB,UAAS,oCAAAC,OAAcjB,EAAWkB,eAAe,SAAQ,uBAAO,IAK/Eb,EAAeQ,iBAAiB,SAAS,KACnCF,EAAgB,IAClBA,IACAL,EAAgBG,UAAYE,EAE5BX,GAAcO,EACdV,EAAYmB,UAAS,oCAAAC,OAAcjB,EAAWkB,eAAe,SAAQ,wBACrEnB,EAAaiB,UAAS,oCAAAC,OAAcjB,EAAWkB,eAAe,SAAQ,0BAGpEP,GAAiB,IACnBN,EAAeS,MAAMC,QAAU,OAC/BT,EAAgBQ,MAAMC,QAAU,OAClC,IAIEJ,GAAiB,IACnBN,EAAeS,MAAMC,QAAU,OAC/BT,EAAgBQ,MAAMC,QAAU,OAClC,IAOFI,aAAaC,QAAQ,aAAcpB,GAqCnC,MAAMqB,EAAW1B,SAASC,iBAAiB,mCAGrC0B,EAAeC,IAEnBA,EAAMC,iBAGNH,EAASpB,SAASwB,IAChBA,EAAKC,UAAUC,OAAO,yCAAyC,IAIjEJ,EAAMK,OAAOF,UAAUG,IAAI,0CAGZlC,SAASG,cAAcyB,EAAMK,OAAOE,aAAa,SAGzDC,eAAe,CAAEC,SAAU,UAAW,EAI/CX,EAASpB,SAASwB,IAChBA,EAAKZ,iBAAiB,QAASS,EAAY,IAI7CW,OAAOpB,iBAAiB,UAAU,KAEhC,MAAMqB,EAAiBD,OAAOE,qBAAuBxC,SAASyC,gBAAgBC,UAG9EhB,EAASpB,SAASwB,IAEhB,MAAMG,EAASjC,SAASG,cAAc2B,EAAKK,aAAa,SAClDQ,EAAYV,EAAOW,UACnBC,EAAeF,EAAYV,EAAOa,aAGpCP,GAAkBI,GAAaJ,EAAiBM,IAElDnB,EAASpB,SAASwB,IAChBA,EAAKC,UAAUC,OAAO,yCAAyC,IAIjEF,EAAKC,UAAUG,IAAI,0CACrB,GACA,G","sources":["index.js"],"sourcesContent":["import './index.css';\n\n\n\n\n// Получаем все элементы с классом \"position_priceBlock__16P3q\"\nconst priceBlocks = document.querySelectorAll('.position_priceBlock__16P3q');\nconst costElement = document.querySelector('.order-float-button_orderFloatButton__1E-RQ');\nconst costElement2 = document.querySelector('.header_cartWrapper__1eKTd')\nlet totalPrice = 0; // хранилище общей суммы\n\n\n\n\n                  //let totalQuantity = 0; // хранилище общего количества товаров переменная:(${totalQuantity})\n// Для каждого блока цены выполняем действия\npriceBlocks.forEach((priceBlock) => {\n\n  // Получаем элементы внутри текущего блока\n  const priceElement = priceBlock.querySelector('.position_price__17QNz');\n  const addButton = priceBlock.querySelector('.quantity-button_quantityButton__1KTbZ:last-child');\n  const subtractButton = priceBlock.querySelector('.quantity-button_quantityButton__1KTbZ:first-child');\n  const quantityElement = priceBlock.querySelector('.position_quantity__ZG2rH');\n  \n  // Получаем изначальное значение цены и количества\n  const priceValue = parseFloat(priceElement.innerText.replace(/[^\\d.]/g, ''));\n  const initialQuantityValue = parseInt(quantityElement.innerText);\n  let quantityValue = initialQuantityValue;\n\n  // Добавляем обработчик события при клике на кнопку добавления\n  addButton.addEventListener('click', () => {\n    quantityValue++; // Увеличиваем значение количества на 1\n    quantityElement.innerText = quantityValue; // Обновляем значение количества на странице\n    subtractButton.style.display = 'inline-block'; // Отображаем кнопку вычитания\n    quantityElement.style.display = 'inline-block'; // Отображаем элемент с количеством\n\n        totalPrice += priceValue;        // Обновляем общую сумму\n    costElement.innerHTML = `Заказ / ${totalPrice.toLocaleString('ru-RU')} руб.`; // Обновляем значение общей стоимости на кнопке снизу\n    costElement2.innerHTML = `Заказ / ${totalPrice.toLocaleString('ru-RU')} руб.`; //Обновляем значение общей стоимости на кнопке вверху\n  });\n\n\n  // Добавляем обработчик события при клике на кнопку вычитания\n  subtractButton.addEventListener('click', () => {\n    if (quantityValue > 0) {\n      quantityValue--; // Уменьшаем значение количества на 1\n      quantityElement.innerText = quantityValue; // Обновляем значение количества на странице\n   \n      totalPrice -= priceValue;   // Обновляем общую сумму\n      costElement.innerHTML = `Заказ / ${totalPrice.toLocaleString('ru-RU')} руб.`; // Обновляем значение общей стоимости на кнопке внизу\n      costElement2.innerHTML = `Заказ / ${totalPrice.toLocaleString('ru-RU')} руб.)`; //Обновляем значение общей стоимости на кнопке вверху\n    }\n\n    if (quantityValue <= 0) {\n      subtractButton.style.display = 'none'; // Скрываем кнопку вычитания\n      quantityElement.style.display = 'none'; // Скрываем элемент с количеством\n    }\n  });\n\n  // Если начальное значение количества меньше или равно 1, скрываем кнопку вычитания и элемент с количеством\n  if (quantityValue <= 1) {\n    subtractButton.style.display = 'none';\n    quantityElement.style.display = 'none';\n  }\n\n});\n\n\n\n// Сохраняем значение totalPrice, а не ссылку на функцию getTotalPrice\nlocalStorage.setItem('totalPrice', totalPrice);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n             //Обводка ссылочных кнопок навигационной панели\n/*const links = document.querySelectorAll('.filter-by-category_item__2BptE');\n\nlinks.forEach(link => {\n    link.addEventListener('click', () => {\n        links.forEach(link => {\n            link.classList.remove('filter-by-category_selectedItem__120_e');\n        });\n        link.classList.add('filter-by-category_selectedItem__120_e');\n    });\n});   */          //Обводка ссылочных кнопок навигационной панели\n\n\n\n\n// Получаем все элементы навигационной панели\nconst navLinks = document.querySelectorAll('.filter-by-category_item__2BptE');\n\n// Создаем функцию для обработки клика на элементе\nconst handleClick = (event) => {\n  // Отменяем стандартное поведение ссылки, чтобы страница не перезагружалась\n  event.preventDefault();\n\n  // Удаляем класс 'filter-by-category_selectedItem__120_e' у всех элементов навигационной панели\n  navLinks.forEach((link) => {\n    link.classList.remove('filter-by-category_selectedItem__120_e');\n  });\n\n  // Добавляем класс 'filter-by-category_selectedItem__120_e' к текущему элементу\n  event.target.classList.add('filter-by-category_selectedItem__120_e');\n\n  // Получаем элемент, на который ссылается текущая кнопка\n  const target = document.querySelector(event.target.getAttribute('href'));\n\n  // Прокручиваем страницу к выбранному разделу\n  target.scrollIntoView({ behavior: 'smooth' });\n};\n\n// Добавляем обработчик события клика на каждый элемент навигационной панели\nnavLinks.forEach((link) => {\n  link.addEventListener('click', handleClick);\n});\n\n// Добавляем обработчик события скролла на объект window\nwindow.addEventListener('scroll', () => {\n  // Получаем вертикальную позицию прокрутки страницы\n  const scrollPosition = window.PageTransitionEvent || document.documentElement.scrollTop;\n\n  // Перебираем все элементы навигационной панели\n  navLinks.forEach((link) => {\n    // Получаем позицию раздела, на который ведет ссылка\n    const target = document.querySelector(link.getAttribute('href'));\n    const topOffset = target.offsetTop;\n    const bottomOffset = topOffset + target.offsetHeight;\n\n    // Проверяем, находится ли позиция прокрутки страницы внутри раздела\n    if (scrollPosition >= topOffset && scrollPosition < bottomOffset) {\n      // Удаляем класс 'filter-by-category_selectedItem__120_e' у всех элементов навигационной панели\n      navLinks.forEach((link) => {\n        link.classList.remove('filter-by-category_selectedItem__120_e');\n      });\n\n      // Добавляем класс 'filter-by-category_selectedItem__120_e' к текущему элементу\n      link.classList.add('filter-by-category_selectedItem__120_e');\n    }\n  });\n});\n"],"names":["priceBlocks","document","querySelectorAll","costElement","querySelector","costElement2","totalPrice","forEach","priceBlock","priceElement","addButton","subtractButton","quantityElement","priceValue","parseFloat","innerText","replace","quantityValue","parseInt","addEventListener","style","display","innerHTML","concat","toLocaleString","localStorage","setItem","navLinks","handleClick","event","preventDefault","link","classList","remove","target","add","getAttribute","scrollIntoView","behavior","window","scrollPosition","PageTransitionEvent","documentElement","scrollTop","topOffset","offsetTop","bottomOffset","offsetHeight"],"sourceRoot":""}